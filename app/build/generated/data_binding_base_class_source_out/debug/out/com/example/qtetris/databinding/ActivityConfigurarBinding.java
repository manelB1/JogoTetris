// Generated by data binding compiler. Do not edit!
package com.example.qtetris.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.qtetris.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityConfigurarBinding extends ViewDataBinding {
  @NonNull
  public final Button buttonCancelar;

  @NonNull
  public final Button buttonSalvar;

  @NonNull
  public final RadioButton radioButtonDificil;

  @NonNull
  public final RadioButton radioButtonFacil;

  @NonNull
  public final RadioButton radioButtonMedio;

  @NonNull
  public final RadioGroup radioGroupDificuldade;

  @NonNull
  public final TextView textViewTitulo;

  protected ActivityConfigurarBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button buttonCancelar, Button buttonSalvar, RadioButton radioButtonDificil,
      RadioButton radioButtonFacil, RadioButton radioButtonMedio, RadioGroup radioGroupDificuldade,
      TextView textViewTitulo) {
    super(_bindingComponent, _root, _localFieldCount);
    this.buttonCancelar = buttonCancelar;
    this.buttonSalvar = buttonSalvar;
    this.radioButtonDificil = radioButtonDificil;
    this.radioButtonFacil = radioButtonFacil;
    this.radioButtonMedio = radioButtonMedio;
    this.radioGroupDificuldade = radioGroupDificuldade;
    this.textViewTitulo = textViewTitulo;
  }

  @NonNull
  public static ActivityConfigurarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_configurar, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityConfigurarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityConfigurarBinding>inflateInternal(inflater, R.layout.activity_configurar, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityConfigurarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_configurar, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityConfigurarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityConfigurarBinding>inflateInternal(inflater, R.layout.activity_configurar, null, false, component);
  }

  public static ActivityConfigurarBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityConfigurarBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityConfigurarBinding)bind(component, view, R.layout.activity_configurar);
  }
}
